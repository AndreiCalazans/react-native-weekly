[
  {
    "authorName": "Samuel Susla",
    "authorEmail": "samuelsusla@meta.com",
    "date": "Wed May 31 06:58:15 2023 -0700",
    "title": "Fix header imports (#37625)",
    "hash": "b55f55198c98ae5fc1c553b9a40061c0f015ee67",
    "explanation": "This commit fixes header imports in React Native. It adds an explicit <memory> import and changes an include to import.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/React/Fabric/RCTScheduler.mm",
        "snippet": "@@ -12,7 +12,7 @@\n #import <react/renderer/debug/SystraceSection.h>\n #import <react/renderer/scheduler/Scheduler.h>\n #import <react/re\nnderer/scheduler/SchedulerDelegate.h>\n-#include <react/utils/RunLoopObserver.h>\n+#import <react/utils/RunLoopObserver.h>"
      }
    ]
  },
  {
    "authorName": "Chetan Ambekar",
    "authorEmail": "cambekar@fb.com",
    "date": "Tue May 30 17:35:54 2023 -0700",
    "title": "Revert D46194126: Prepare bolts.Task to be safe to be usde from Kotlin",
    "hash": "0e83c53122f871f54c562b945e3cb9e2c27c406f",
    "explanation": "Reverted changes from D46194126 to prepare Task.java to be used from Kotlin.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java",
        "snippet": "@@ -7,8 +6,6 @@\n \npackage com.facebook.react.bridgeless.internal.bolts;\n \n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;"
      },
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java",
        "snippet": "@@ -61,14 +59,14 @@ public class Task<TResult> {\n     * @param t the task\n     * @param e the exception\n     */\n-    void unobservedException(@NonNull Task<?> t, @NonNull UnobservedTaskException e);\n   }\n \n   // null unless explicitly set\n   private static volatile UnobservedExceptionHandler unobservedExceptionHandler;\n \n   /** Returns the handler invoked when a task has an unobserved exception or {@code null}. */\n-  public static @Nullable UnobservedExceptionHandler getUnobservedExceptionHandler() {\n+  public static UnobservedExceptionHandler getUnobservedExceptionHandler() {\n     return unobservedExceptionHandler;\n   }"
      }
    ]
  },
  {
    "authorName": "David Vacca",
    "authorEmail": "dvacca@meta.com",
    "date": "Tue May 30 13:13:36 2023 -0700",
    "title": "Prepare bolts.Task to be safe to be usde from Kotlin",
    "hash": "730ca354050f46e4894e09a301f7ff40558ab313",
    "explanation": "Prepare bolts.Task to be safe to be usde from Kotlin",
    "relevantSnippets": [
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java",
        "snippet": "import androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;"
      },
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java",
        "snippet": "void unobservedException(@NonNull Task<?> t, @NonNull UnobservedTaskException e);"
      },
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java",
        "snippet": "@Nullable private TResult result;\n@Nullable private Exception error;"
      }
    ]
  },
  {
    "authorName": "David Vacca",
    "authorEmail": "dvacca@meta.com",
    "date": "Tue May 30 13:13:36 2023 -0700",
    "title": "Prepare bolts to be safe to use it from Kotlin",
    "hash": "dfb42a3946b6c1d20fd42d554027fef45f4ec70d",
    "explanation": "Prepare bolts to be safe to use it from Kotlin",
    "relevantSnippets": [
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/AggregateException.java",
        "snippet": "import androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;"
      },
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/AggregateException.java",
        "snippet": "@NonNull private final List<Throwable> innerThrowables;"
      },
      {
        "file": "packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/AggregateException.java",
        "snippet": "public AggregateException(@NonNull String detailMessage, @NonNull Throwable[] innerThrowables)"
      }
    ]
  },
  {
    "authorName": "Samuel Susla",
    "authorEmail": "samuelsusla@meta.com",
    "date": "Tue May 30 13:00:07 2023 -0700",
    "title": "Back out \"Enable RuntimeScheduler in old architecture\" (#37623)",
    "hash": "88eef42cabcc0b0c5ba5a884bbb3ffd30e8b5726",
    "explanation": "The commit reverts a previous commit that enabled the RuntimeScheduler in the old React Native architecture. The RuntimeScheduler is used in the new React Native architecture.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm",
        "snippet": "diff --git a/packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm b/packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm\nindex f5cd8bcc2b2..a6fcb509476 100644\n--- a/packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm\n+++ b/packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm\n@@ -6,41 +6,38 @@\n */\n\n#import \"RCTAppDelegate.h\"\n-#import <React/RCTCxxBridgeDelegate.h>\n #import <React/RCTRootView.h>\n-#import <React/RCTRuntimeExecutorFromBridge.h>\n-#import <react/renderer/runtimescheduler/RuntimeScheduler.h>\n #import \"RCTAppSetupUtils.h\"\n\n #if RCT_NEW_ARCH_ENABLED\n #import <React/CoreModulesPlugins.h>\n #import <React/RCTComponentViewFactory.h>\n #import <React/RCTComponentViewProtocol.h>\n+#import <React/RCTCxxBridgeDelegate.h>\n #import <React/RCTFabricSurfaceHostingProxyRootView.h>\n #import <React/RCTLegacyViewManagerInteropComponentView.h>\n #import <React/RCTSurfacePresenter.h>\n #import <React/RCTSurfacePresenterBridgeAdapter.h>\n #import <ReactCommon/RCTTurboModuleManager.h>\n #import <react/config/ReactNativeConfig.h>\n+#import <react/renderer/runtimescheduler/RuntimeScheduler.h>\n #import <react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h>\n #import \"RCTLegacyInteropComponents.h\"\n\n static NSString *const kRNConcurrentRoot = @\"concurrentRoot\";\n\n-@interface RCTAppDelegate () <RCTTurboModuleManagerDelegate, RCTComponentViewFactoryComponentProvider> {\n+@interface RCTAppDelegate () <\n+    RCTTurboModuleManagerDelegate,\n+    RCTCxxBridgeDelegate,\n+    RCTComponentViewFactoryComponentProvider> {\n   std::shared_ptr<const facebook::react::ReactNativeConfig> _reactNativeConfig;\n   facebook::react::ContextContainer::Shared _contextContainer;\n+  std::shared_ptr<facebook::react::RuntimeScheduler> _runtimeScheduler;\n }\n @end\n\n #endif\n\n-@interface RCTAppDelegate () <RCTCxxBridgeDelegate> {\n-  std::shared_ptr<facebook::react::RuntimeScheduler> _runtimeScheduler;\n-} \n-@end\n\n @implementation RCTAppDelegate\n\n #if RCT_NEW_ARCH_ENABLED"
      }
    ]
  },
  {
    "authorName": "Kevin VanGelder",
    "authorEmail": "kevin.vangelder1@accesscfa.com",
    "date": "Tue May 30 12:13:12 2023 -0700",
    "title": "Fix missing `atomic` import (#37621)",
    "hash": "02a73ca85653ff4de5c350410a68061426ecf587",
    "explanation": "Add missing `atomic` import to fix build error.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/React/CxxBridge/RCTMessageThread.h",
        "snippet": "+#import <atomic>"
      }
    ]
  },
  {
    "authorName": "Dmitry Rykun",
    "authorEmail": "dmitryrykun@meta.com",
    "date": "Tue May 30 08:04:23 2023 -0700",
    "title": "Introduce __nativeComponentRegistry__getNativeViewConfig (#37522)",
    "hash": "7f22db8ea034d1aed74103542b04af2a8a11caa1",
    "explanation": "This diff adds cross-platform Cxx binding helper and iOS specific implementation of `__nativeComponentRegistry__getNativeViewConfig` to JS runtime. This function provides native view config for a native component in bridgeless mode.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/React/Base/RCTConstants.h",
        "snippet": "RCT_EXTERN BOOL RCTGetUseNativeViewConfigsInBridgelessMode(void);\nRCT_EXTERN void RCTSetUseNativeViewConfigsInBridgelessMode(BOOL value);"
      },
      {
        "file": "packages/react-native/React/Base/RCTConstants.m",
        "snippet": "static BOOL RCTUseNativeViewConfigsInBridgelessMode = NO;\n\nBOOL RCTGetUseNativeViewConfigsInBridgelessMode(void)\n{\n  return RCTUseNativeViewConfigsInBridgelessMode;\n}\n\nvoid RCTSetUseNativeViewConfigsInBridgelessMode(BOOL value)\n{\n  RCTUseNativeViewConfigsInBridgelessMode = value;\n}"
      },
      {
        "file": "packages/react-native/React/Modules/RCTUIManager.h",
        "snippet": "RCT_EXTERN NSMutableDictionary<NSString *, id> *RCTModuleConstantsForDestructuredComponent("
      },
      {
        "file": "packages/react-native/React/Modules/RCTUIManager.m",
        "snippet": "NSMutableDictionary<NSString *, id> *RCTModuleConstantsForDestructuredComponent("
      }
    ]
  },
  {
    "authorName": "Pieter De Baets",
    "authorEmail": "pieterdb@meta.com",
    "date": "Tue May 30 07:20:25 2023 -0700",
    "title": "Use SurfaceRegistry globals whenever available (#37410)",
    "hash": "da3dcd73262e8285715990d4c23a537a9e9223f3",
    "explanation": "Use SurfaceRegistry globals whenever available to incrementally adopt new bridgeless API's.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp",
        "snippet": "void throwIfBridgeless(jsi::Runtime &runtime, jsi::Object &global, const char *methodName) {"
      },
      {
        "file": "packages/react-native/ReactCommon/react/renderer/uimanager/SurfaceRegistryBinding.cpp",
        "snippet": "auto registry = global.getProperty(runtime, \"RN$AppRegistry\");"
      }
    ]
  },
  {
    "authorName": "Riccardo Cipolleschi",
    "authorEmail": "cipolleschi@meta.com",
    "date": "Tue May 30 07:15:02 2023 -0700",
    "title": "Add tests in CI not to break Hermes-Xcode integration (#37616)",
    "hash": "b0864fd9df18bde34208b0ce343c97e1d6e9d928",
    "explanation": "Add CI tests to avoid breaking the Hermes-Xcode integration.",
    "relevantSnippets": [
      {
        "file": ".circleci/config.yml",
        "snippet": "  # This job builds configures Xcode so that Hermes is built from source\n  # (but only the iphonesimulator slice) and integrated with the Xcode\n  # build toolchain. The `test_ios_rntester` job, instead, takes the\n  # same prebuilt for Hermes that we are going to use in the Release."
      }
    ]
  },
  {
    "authorName": "Pranav Yadav",
    "authorEmail": "Pranavyadav3912@gmail.com",
    "date": "Tue May 30 07:14:25 2023 -0700",
    "title": "Remove `greet.yml` action (#37587)",
    "hash": "50992be4054f78b8277665a8355391b5f3fa836f",
    "explanation": "The `greet.yml` GitHub action was removed because it required changes to repository settings that maintainers cannot control. Removing the action avoids wasting compute resources.",
    "relevantSnippets": [
      {
        "file": ".github/workflows/greet.yml",
        "snippet": "deleted file mode 100644\nindex 7828f08ed18..00000000000\n--- a/.github/workflows/greet.yml\n+++ /dev/null"
      }
    ]
  },
  {
    "authorName": "Douglas Lowder",
    "authorEmail": "douglowder@mac.com",
    "date": "Tue May 30 06:44:49 2023 -0700",
    "title": "Fix Fabric issue with React-Core pod when Xcode project has multiple targets (#37581)",
    "hash": "d3e35992e904d191224d8cc949c2e7e3b3cacbe5",
    "explanation": "Fix issue where Fabric was not enabled for React Native projects with multiple Xcode targets. The code was looking for an exact pod name of 'React-Core' and would fail if Cocoapods added a suffix to the pod name.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/scripts/cocoapods/new_architecture.rb",
        "snippet": "@@ -16,7 +16,8 @@ class NewArchitectureHelper\n        language_standard = nil\n\n        installer.pods_project.targets.each do |target|\n-            if target.name == 'React-Core'\n+            # The React-Core pod may have a suffix added by Cocoapods, so we test whether 'React-Core' is a substring, and do not require exact match\n+            if target.name.include? 'React-Core'"
      },
      {
        "file": "packages/react-native/scripts/cocoapods/new_architecture.rb",
        "snippet": "@@ -61,7 +62,8 @@ class NewArchitectureHelper\n\n        # Add RCT_NEW_ARCH_ENABLED to generated pod target projects\n        installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|\n-            if pod_name == 'React-Core'\n+            # The React-Core pod may have a suffix added by Cocoapods, so we test whether 'React-Core' is a substring, and do not require exact match\n+            if pod_name.include? 'React-Core'"
      }
    ]
  },
  {
    "authorName": "Samuel Susla",
    "authorEmail": "samuelsusla@meta.com",
    "date": "Tue May 30 04:12:38 2023 -0700",
    "title": "Attempt at fixing crash when blurring image on iOS (#37614)",
    "hash": "5eadd935e8be0d3460c05d2d2919836ba1d6b4b0",
    "explanation": "The code was crashing when blurring images on iOS. The issue was that vImageBoxConvolve_ARGB8888 could return 0, in which case memory of size 0 would be allocated, leading to a crash. The fix was to check that the returned tempBufferSize is greater than 0 before allocating memory.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/Libraries/Image/RCTImageBlurUtils.m",
        "snippet": "@@ -54,7 +54,7 @@\n   // create temp buffer\n   vImage_Error tempBufferSize = vImageBoxConvolve_ARGB8888(\n       &buffer1, &buffer2, NULL, 0, 0, boxSize, boxSize, NULL, kvImageGetTempBufferSize | kvImageEdgeExtend);\n-  if (tempBufferSize < 0) {\n+  if (tempBufferSize <= 0) {"
      }
    ]
  },
  {
    "authorName": "Riccardo Cipolleschi",
    "authorEmail": "cipolleschi@meta.com",
    "date": "Tue May 30 04:10:17 2023 -0700",
    "title": "Backporting a fix for hermesc on linux (#37596)",
    "hash": "323b7f85363aa59699e1e5fdcb4ce9b8cfcb770c",
    "explanation": "Backporting a fix for hermesc on linux. This commit bumps the hermes keys to build the right version of hermes in CI.",
    "relevantSnippets": [
      {
        "file": ".circleci/config.yml",
        "snippet": "hermes_workspace_cache_key: &hermes_workspace_cache_key v5-hermes-{{ .Environment.CIRCLE_JOB }}-{{ checksum \"/tmp/hermes/hermesversion\" }}"
      },
      {
        "file": ".circleci/config.yml",
        "snippet": "if [ -f \"$HERMES_VERSION_FILE\" ]; then\n              echo \"Hermes Version file found! Using this version for the build:\"\n              cat $HERMES_VERSION_FILE > /tmp/hermes/hermesversion\n            else\n              echo \"Hermes Version file not found!!!\"\n              echo \"Using the last commit from main for the build:\"\n              HERMES_TAG_SHA=$(git ls-remote https://github.com/facebook/hermes main | cut -f 1 | tr -d '[:space:]')\n              echo $HERMES_TAG_SHA > /tmp/hermes/hermesversion\n            fi"
      }
    ]
  },
  {
    "authorName": "Riccardo Cipolleschi",
    "authorEmail": "cipolleschi@meta.com",
    "date": "Tue May 30 04:10:17 2023 -0700",
    "title": "Make RNTester use RCTAppDelegate (#37572)",
    "hash": "680cbe757b250fd9a05862040c080f063b2197a7",
    "explanation": "The RNTester app was updated to use the RCTAppDelegate instead of a custom AppDelegate. This aligns the RNTester setup with the open source React Native setup and reduces duplicated work. So me small differences still remain but will be addressed over time.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/Libraries/AppDelegate/RCTLegacyInteropComponents.mm",
        "snippet": "+ (NSArray<NSString *> *)legacyInteropComponents\n{\n  return @[ @\"RNTMyLegacyNativeView\" ];\n}"
      },
      {
        "file": "packages/rn-tester/RNTester/AppDelegate.h",
        "snippet": "#import <RCTAppDelegate.h>\n#import <UIKit/UIKit.h>\n\n@interface AppDelegate : RCTAppDelegate"
      },
      {
        "file": "packages/rn-tester/RNTester/AppDelegate.mm",
        "snippet": "#import <React/RCTBundleURLProvider.h>\n#import <React/RCTLinkingManager.h>"
      }
    ]
  },
  {
    "authorName": "Intl Scheduler",
    "authorEmail": "",
    "date": "Mon May 29 21:34:22 2023 -0700",
    "title": "translation auto-update for i18n/fb4a.config.json on master",
    "hash": "551bbbc234734f52e89cf24dc0ac07c78094c4c7",
    "explanation": "",
    "relevantSnippets": [
      {
        "file": "packages/react-native/ReactAndroid/src/main/res/devsupport/values-sq/strings.xml",
        "snippet": "<string name=\"catalyst_dev_menu_sub_header\" gender=\"unknown\">Duke ekzekutuar %1$s</string>"
      }
    ]
  },
  {
    "authorName": "Riccardo Cipolleschi",
    "authorEmail": "cipolleschi@fb.com",
    "date": "Mon May 29 07:27:36 2023 -0700",
    "title": "Revert D45904748: Move LayoutMetrics and LayoutPrimitives from core to graphics folder",
    "hash": "9084ee133a060ac2b2e5b140476e6924fd1225ad",
    "explanation": "Revert changes made in commit D45904748 which moved LayoutMetrics and LayoutPrimitives from core to graphics folder.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h",
        "snippet": "@@ -14,8 +14,8 @@\n #import <react/renderer/components/view/ViewEventEmitter.h>\n #import <react/renderer/components/view/ViewProps.h>\n #import <react/renderer/core/EventEmitter.h>\n+#import <react/renderer/core/LayoutMetrics.h>\n #import <react/renderer/core/Props.h>\n-#import <react/renderer/graphics/LayoutMetrics.h>"
      },
      {
        "file": "packages/react-native/React/Fabric/Mounting/RCTComponentViewProtocol.h",
        "snippet": "@@ -9,9 +9,9 @@\n \n #import <react/renderer/componentregistry/ComponentDescriptorProvider.h>\n #import <react/renderer/core/EventEmitter.h>\n+#import <react/renderer/core/LayoutMetrics.h>\n #import <react/renderer/core/Props.h>\n #import <react/renderer/core/State.h>\n-#import <react/renderer/graphics/LayoutMetrics.h>"
      }
    ]
  },
  {
    "authorName": "Samuel Susla",
    "authorEmail": "samuelsusla@meta.com",
    "date": "Mon May 29 06:52:31 2023 -0700",
    "title": "Move LayoutMetrics and LayoutPrimitives from core to graphics folder (#37609)",
    "hash": "ce3ade82bfc514922242debfd0352b0a648550ea",
    "explanation": "The LayoutMetrics and LayoutPrimitives files were moved from the core folder to the graphics folder. This was done to enable different implementations for different platforms.",
    "relevantSnippets": [
      {
        "file": "packages/react-native/React/Fabric/Mounting/ComponentViews/View/RCTViewComponentView.h",
        "snippet": "@@ -14,8 +14,8 @@\n#import <react/renderer/components/view/ViewEventEmitter.h>\n#import <react/renderer/components/view/ViewProps.h>\n#import <react/renderer/core/EventEmitter.h>\n-#import <react/renderer/core/LayoutMetrics.h>\n#import <react/renderer/core/Props.h>\n+#import <react/renderer/graphics/LayoutMetrics.h>"
      },
      {
        "file": "packages/react-native/React/Fabric/Mounting/RCTComponentViewProtocol.h",
        "snippet": "@@ -9,9 +9,9 @@\n \n#import <react/renderer/componentregistry/ComponentDescriptorProvider.h>\n#import <react/renderer/core/EventEmitter.h>\n-#import <react/renderer/core/LayoutMetrics.h>\n#import <react/renderer/core/Props.h>\n#import <react/renderer/core/State.h>\n+#import <react/renderer/graphics/LayoutMetrics.h>"
      },
      {
        "file": "packages/react-native/React/Fabric/RCTConversions.h",
        "snippet": "@@ -9,8 +9,8 @@\n \n#import <react/renderer/components/view/AccessibilityPrimitives.h>\n#import <react/renderer/components/view/primitives.h>\n-#import <react/renderer/core/LayoutPrimitives.h>\n#import <react/renderer/graphics/Color.h>\n+#import <react/renderer/graphics/LayoutPrimitives.h>"
      }
    ]
  }
]
