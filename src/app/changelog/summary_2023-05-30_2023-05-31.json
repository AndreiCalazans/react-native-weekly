[{"authorName":"Samuel Susla","authorEmail":"samuelsusla@meta.com","date":"Wed May 31 06:58:15 2023 -0700","title":"Fix header imports (#37625)","hash":"b55f55198c98ae5fc1c553b9a40061c0f015ee67","explanation":"This commit fixes header imports in React Native. It adds an explicit <memory> import and changes an include to import.","relevantSnippets":[{"file":"packages/react-native/React/Fabric/RCTScheduler.mm","snippet":"@@ -12,7 +12,7 @@\n #import <react/renderer/debug/SystraceSection.h>\n #import <react/renderer/scheduler/Scheduler.h>\n #import <react/re\nnderer/scheduler/SchedulerDelegate.h>\n-#include <react/utils/RunLoopObserver.h>\n+#import <react/utils/RunLoopObserver.h>"}]},{"authorName":"Chetan Ambekar","authorEmail":"cambekar@fb.com","date":"Tue May 30 17:35:54 2023 -0700","title":"Revert D46194126: Prepare bolts.Task to be safe to be usde from Kotlin","hash":"0e83c53122f871f54c562b945e3cb9e2c27c406f","explanation":"This commit reverts a previous commit (D46194126) in order to prepare the bolts.Task class to be used from Kotlin. The original commit modified the bolts.Task class by removing nullability annotations and defaulting some variables to non-null, but this commit reverts those changes.","relevantSnippets":[{"file":"packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java","snippet":"@@ -7,8 +7,6 @@\n \npackage com.facebook.react.bridgeless.internal.bolts;\n \n-import androidx.annotation.NonNull;\n-import androidx.anno\ntation.Nullable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -61,14 +59,14 @@ public class Task<TResul\nt> {\n * @param t the task\n * @param e the exception\n /\n- void unobservedException(@NonNull Task<?> t, @NonNull UnobservedTaskException e);\n+    void unobservedException(Task<?> t, UnobservedTaskException e);\n }\n \n // null unless explicitly set\n private static volatile UnobservedExceptionHandler unobservedExceptionHandler;\n \n /* Returns the handler invoked when a task has an unobserved exception or {@code null}. /\n- public static @Nullable UnobservedExceptionHandler getUnobservedExceptionHandler() {\n+ public static UnobservedExceptionHandler getUnobservedExceptionHandler() {\n return unobservedExceptionHandler;\n }\n"}]},{"authorName":"David Vacca","authorEmail":"dvacca@meta.com","date":"Tue May 30 13:13:36 2023 -0700","title":"Prepare bolts.Task to be safe to be usde from Kotlin","hash":"730ca354050f46e4894e09a301f7ff40558ab313","explanation":"This commit prepares the bolts.Task class to be used from Kotlin. The author analyzed the class to ensure it is ready to be called from Kotlin code. The commit does not convert bolts.Task to Kotlin, but prepares it so its call sites (like ReactHost) can be converted to Kotlin. This commit continues work from a previous commit, splitting up changes to bolts.Task because it is a large class. The changes were reviewed internally and prepared for shipping to production.","relevantSnippets":[{"file":"packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java","snippet":"@@ -7,6 +7,8 @@\n \npackage com.facebook.react.bridgeless.internal.bolts;\n \n+import androidx.annotation.NonNull;\n+import androidx.anno\ntation.Nullable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;"},{"file":"packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/Task.java","snippet":"@@ -59,14 +61,14 @@ public class Task<TResult> {\n * @param t the task\n * @param e the exception\n /\n- void unobservedE\nxception(Task<?> t, UnobservedTaskException e);\n+    void unobservedException(@NonNull Task<?> t, @NonNull UnobservedTaskException e);\n }\n \n // nul\nl unless explicitly set\n private static volatile UnobservedExceptionHandler unobservedExceptionHandler;\n \n / Returns the handler invoked when a task has an unobserved exception or {@code null}. */\n- public static UnobservedExceptionHandler getUnobservedExceptionHandler() {\n+ public static @Nullab\ne UnobservedExceptionHandler getUnobservedExceptionHandler() {"}]},{"authorName":"David Vacca","authorEmail":"dvacca@meta.com","date":"Tue May 30 13:13:36 2023 -0700","title":"Prepare bolts to be safe to use it from Kotlin","hash":"dfb42a3946b6c1d20fd42d554027fef45f4ec70d","explanation":"The AggregateException class in the bolts library was updated to be Kotlin-friendly by adding nullability annotations and default parameter values.","relevantSnippets":[{"file":"packages/react-native/ReactAndroid/src/main/java/com/facebook/react/bridgeless/internal/bolts/AggregateException.java","snippet":"@@ -7,6 +7,8 @@\n \npackage com.facebook.react.bridgeless.internal.bolts;\n\n+import androidx.annotation.NonNull;\n+import androidx.annot ation.Nullable;\nimport java.io.PrintStream;\nimport java.io.PrintWriter;\nimport java.util.ArrayList;\n@@ -24,7 +26,7 @@ public class AggregateException e xtends Exception {\n  \n  private static final String DEFAULT_MESSAGE = \"There were multiple errors.\";\n  \n-  private List<Throwable> innerThrowables;\n +  @NonNull private final List<Throwable> innerThrowables;\n  \n  /**\n   * Constructs a new {@code AggregateException} with the current stack trace, the s pecified detail\n@@ -33,7 +35,7 @@ public class AggregateException extends Exception {\n   * @param detailMessage The detail message for this exception. \n * @param innerThrowables The exceptions that are the cause of the current exception.\n   */\n-  public AggregateException(String detailMessage, Throwabl e[] innerThrowables) {\n+  public AggregateException(@NonNull String detailMessage, @NonNull Throwable[] innerThrowables) {\n    this(detailMessage, Arrays .asList(innerThrowables));\n  }\n  \n@@ -44,11 +46,13 @@ public class AggregateException extends Exception {\n   * @param detailMessage The detail message for this exception. \n   * @param innerThrowables The exceptions that are the cause of the current exception.\n   */\n-  public AggregateException(String d etailMessage, List<? extends Throwable> innerThrowables) {\n+  public AggregateException(\n+      @NonNull String detailMessage, @Nullable List<? extends T hrowable> innerThrowables) {\n    super(\n        detailMessage,\n        innerThrowables != null && innerThrowables.size() > 0 ? innerThrowables.get(0) : null);\n-    this.innerThrowables = Collections.unmodifiableList(innerThrowables);\n+    this.innerThrowables =\n+        Collections.unmodifiableList(inne rThrowables != null ? innerThrowables : new ArrayList<>());\n  }\n  \n  /**\n@@ -57,7 +61,7 @@ public class AggregateException extends Exception {\n   * \n * @param innerThrowables The exceptions that are the cause of the current exception.\n   */\n-  public AggregateException(List<? extends Throwable> inne rThrowables) {\n+  public AggregateException(@Nullable List<? extends Throwable> innerThrowables) {\n    this(DEFAULT_MESSAGE, innerThrowables);\n  }\n  \n @@ -65,12 +69,12 @@ public class AggregateException extends Exception {\n   * Returns a read-only {@link List} of the {@link Throwable} instances that caus ed the current\n   * exception. \n   */\n-  public List<Throwable> getInnerThrowables()\n"}]},{"authorName":"Samuel Susla","authorEmail":"samuelsusla@meta.com","date":"Tue May 30 13:00:07 2023 -0700","title":"Back out \"Enable RuntimeScheduler in old architecture\" (#37623)","hash":"88eef42cabcc0b0c5ba5a884bbb3ffd30e8b5726","explanation":"Reverted changes from Pull Request #37623. The original commit (5f18cbe60e6c) enabled the RuntimeScheduler in the old React Native architecture. This reverts those changes.","relevantSnippets":[{"file":"packages/react-native/Libraries/AppDelegate/RCTAppDelegate.mm","snippet":"@@ -6,41 +6,38 @@\n \n #import \"RCTAppDelegate.h\"\n-#import <React/RCTCxxBridgeDelegate.h>\n #import <React/RCTRootView.h>\n-#import <R eact/RCTRuntimeExecutorFromBridge.h>\n-#import <react/renderer/runtimescheduler/RuntimeScheduler.h>\n \n #import \"RCTAppSetupUtils.h\"\n \n #if RCT_NEW_AR CH_ENABLED\n #import <React/CoreModulesPlugins.h>\n #import <React/RCTComponentViewFactory.h>\n #import <React/RCTComponentViewProtocol.h>\n+#import <React /RCTCxxBridgeDelegate.h>\n #import <React/RCTFabricSurfaceHostingProxyRootView.h>\n #import <React/RCTLegacyViewManagerInteropComponentView.h>\n #import <R eact/RCTSurfacePresenter.h>\n #import <React/RCTSurfacePresenterBridgeAdapter.h>\n #import <ReactCommon/RCTTurboModuleManager.h>\n #import <react/config/Re actNativeConfig.h>\n+#import <react/renderer/runtimescheduler/RuntimeScheduler.h>\n #import <react/renderer/runtimescheduler/RuntimeSchedulerCallInvoker.h> \n #import \"RCTLegacyInteropComponents.h\"\n \n static NSString *const kRNConcurrentRoot = @\"concurrentRoot\";"}]},{"authorName":"Kevin VanGelder","authorEmail":"kevin.vangelder1@accesscfa.com","date":"Tue May 30 12:13:12 2023 -0700","title":"Fix missing `atomic` import (#37621)","hash":"02a73ca85653ff4de5c350410a68061426ecf587","explanation":"[IOS] [FIXED] - Add missing atomic import","relevantSnippets":[{"file":"packages/react-native/React/CxxBridge/RCTMessageThread.h","snippet":"@@ -12,6 +12,7 @@\n\n#import <React/RCTJavaScriptExecutor.h>\n#import <cxxreact/MessageQueueThread.h>\n#import <atomic>"}]},{"authorName":"Dmitry Rykun","authorEmail":"dmitryrykun@meta.com","date":"Tue May 30 08:04:23 2023 -0700","title":"Introduce __nativeComponentRegistry__getNativeViewConfig (#37522)","hash":"7f22db8ea034d1aed74103542b04af2a8a11caa1","explanation":"This commit adds an explicit import for the UIPickerView class in the RCTPicker component in React Native.","relevantSnippets":[{"file":"packages/react-native/React/Views/RCTPickerManager.m","snippet":"@@ -5,6 +5,7 @@\n #import <React/RCTAssert.h>\n #import <React/RCTBridge.h>\n #import <React/RCTConvert.h>\n+#import <UIKit/UIPickerView.h>"}]},{"authorName":"Pieter De Baets","authorEmail":"pieterdb@meta.com","date":"Tue May 30 07:20:25 2023 -0700","title":"Use SurfaceRegistry globals whenever available (#37410)","hash":"da3dcd73262e8285715990d4c23a537a9e9223f3"},{"authorName":"Riccardo Cipolleschi","authorEmail":"cipolleschi@meta.com","date":"Tue May 30 07:15:02 2023 -0700","title":"Add tests in CI not to break Hermes-Xcode integration (#37616)","hash":"b0864fd9df18bde34208b0ce343c97e1d6e9d928"},{"authorName":"Pranav Yadav","authorEmail":"Pranavyadav3912@gmail.com","date":"Tue May 30 07:14:25 2023 -0700","title":"Remove `greet.yml` action (#37587)","hash":"50992be4054f78b8277665a8355391b5f3fa836f"},{"authorName":"Douglas Lowder","authorEmail":"douglowder@mac.com","date":"Tue May 30 06:44:49 2023 -0700","title":"Fix Fabric issue with React-Core pod when Xcode project has multiple targets (#37581)","hash":"d3e35992e904d191224d8cc949c2e7e3b3cacbe5"},{"authorName":"Samuel Susla","authorEmail":"samuelsusla@meta.com","date":"Tue May 30 04:12:38 2023 -0700","title":"Attempt at fixing crash when blurring image on iOS (#37614)","hash":"5eadd935e8be0d3460c05d2d2919836ba1d6b4b0"},{"authorName":"Riccardo Cipolleschi","authorEmail":"cipolleschi@meta.com","date":"Tue May 30 04:10:17 2023 -0700","title":"Backporting a fix for hermesc on linux (#37596)","hash":"323b7f85363aa59699e1e5fdcb4ce9b8cfcb770c"},{"authorName":"Riccardo Cipolleschi","authorEmail":"cipolleschi@meta.com","date":"Tue May 30 04:10:17 2023 -0700","title":"Make RNTester use RCTAppDelegate (#37572)","hash":"680cbe757b250fd9a05862040c080f063b2197a7"},{"authorName":"Intl Scheduler","authorEmail":"","date":"Mon May 29 21:34:22 2023 -0700","title":"translation auto-update for i18n/fb4a.config.json on master","hash":"551bbbc234734f52e89cf24dc0ac07c78094c4c7"}]